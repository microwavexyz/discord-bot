<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Users</title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    #overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 1000;
    }
    #messageForm {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: white;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      z-index: 1001;
    }
  </style>
</head>
<body class="bg-gray-100 min-h-screen flex flex-col">
  <header class="bg-blue-600 p-4 shadow-md">
    <h1 class="text-white text-2xl font-bold text-center">Solaris Bot Dashboard</h1>
  </header>
  <nav class="bg-blue-500 p-3 shadow-md">
    <ul class="flex justify-center space-x-4">
      <li><a href="/" class="text-white hover:text-gray-200 transition-colors duration-300">Home</a></li>
      <li><a href="/users" class="text-white hover:text-gray-200 transition-colors duration-300">Users</a></li>
      <li><a href="/verify-requests" class="text-white hover:text-gray-200 transition-colors duration-300">Verification Requests</a></li>
      <li><a href="/completed-requests" class="text-white hover:text-gray-200 transition-colors duration-300">Completed Requests</a></li>
    </ul>
  </nav>
  <main class="flex-grow p-6">
    <div class="container mx-auto">
      <div class="bg-white rounded-lg shadow-md p-6">
        <input type="text" id="searchInput" placeholder="Search by ID or Tag..." class="mb-4 p-2 border rounded w-full" onkeyup="filterTable()">
        <table class="min-w-full bg-white">
          <thead>
            <tr class="w-full bg-blue-600 text-white">
              <th class="py-2 px-4">ID</th>
              <th class="py-2 px-4">Tag</th>
              <th class="py-2 px-4">Avatar</th>
              <th class="py-2 px-4">Actions</th>
            </tr>
          </thead>
          <tbody id="usersTable">
            <% users.forEach(user => { %>
              <tr class="border-b hover:bg-gray-100">
                <td class="py-2 px-4"><%= user.id %></td>
                <td class="py-2 px-4"><%= user.tag %></td>
                <td class="py-2 px-4"><img src="<%= user.avatar %>" alt="Avatar" class="w-12 h-12 rounded-full"></td>
                <td class="py-2 px-4 space-x-2">
                  <button class="bg-blue-500 text-white py-1 px-2 rounded hover:bg-blue-600 transition-colors duration-300" onclick="showMessageForm('<%= user.id %>')">Message</button>
                  <button class="bg-yellow-500 text-white py-1 px-2 rounded hover:bg-yellow-600 transition-colors duration-300" onclick="manageUser('<%= user.id %>', 'kick')">Kick</button>
                  <button class="bg-red-500 text-white py-1 px-2 rounded hover:bg-red-600 transition-colors duration-300" onclick="manageUser('<%= user.id %>', 'ban')">Ban</button>
                  <button class="bg-gray-500 text-white py-1 px-2 rounded hover:bg-gray-600 transition-colors duration-300" onclick="manageUser('<%= user.id %>', 'timeout')">Timeout</button>
                </td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
    </div>
    <div id="overlay"></div>
    <div id="messageForm" class="rounded-lg">
      <h2 class="text-xl mb-4">Send Message</h2>
      <input type="hidden" id="userId">
      <textarea id="customMessage" rows="4" cols="50" placeholder="Enter your message here..." class="w-full p-2 border rounded mb-4"></textarea>
      <div class="flex justify-end space-x-2">
        <button class="bg-blue-500 text-white py-1 px-4 rounded hover:bg-blue-600 transition-colors duration-300" onclick="sendMessage()">Send</button>
        <button class="bg-gray-500 text-white py-1 px-4 rounded hover:bg-gray-600 transition-colors duration-300" onclick="hideMessageForm()">Cancel</button>
      </div>
    </div>
  </main>
  <script>
    function filterTable() {
      const searchInput = document.getElementById('searchInput').value.toLowerCase();
      const rows = document.querySelectorAll('#usersTable tr');

      rows.forEach(row => {
        const id = row.children[0].textContent.toLowerCase();
        const tag = row.children[1].textContent.toLowerCase();

        if (id.includes(searchInput) || tag.includes(searchInput)) {
          row.style.display = '';
        } else {
          row.style.display = 'none';
        }
      });
    }

    function showMessageForm(userId) {
      document.getElementById('userId').value = userId;
      document.getElementById('overlay').style.display = 'block';
      document.getElementById('messageForm').style.display = 'block';
    }

    function hideMessageForm() {
      document.getElementById('overlay').style.display = 'none';
      document.getElementById('messageForm').style.display = 'none';
    }

    function sendMessage() {
      const userId = document.getElementById('userId').value;
      const message = document.getElementById('customMessage').value;

      fetch(`/manage-user`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId, action: 'message', message }),
      })
      .then(response => response.json())
      .then(data => {
        alert(data.message);
        hideMessageForm();
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }

    function manageUser(userId, action) {
      fetch(`/manage-user`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ userId, action }),
      })
      .then(response => response.json())
      .then(data => {
        alert(data.message);
      })
      .catch(error => {
        console.error('Error:', error);
      });
    }
  </script>
</body>
</html>
